function GenerateMap(token) {
    this.token = token;
    this.surfJson = [];
    this.bizJson = [];
    this.map = "";
    this.geoControl = "";
    this.spotsLayer = "";
    this.businessesLayer = "";
};

GenerateMap.prototype.setMap = function(mapId, zoom) {
    var self = this;
    L.mapbox.accessToken = this.token;
    var map = L.mapbox.map(mapId, 'mapbox.streets');
    this.spotsLayer = L.mapbox.featureLayer().addTo(map);
    this.businessLayer = L.mapbox.featureLayer().addTo(map);
    map.scrollWheelZoom.disable();
    this.geoControl = L.mapbox.geocoderControl('mapbox.places', {
        autocomplete: true
    });
    map.addControl(this.geoControl);
    var current = map.locate();
    map.on('locationfound', function(e) {
        map.setView(e.latlng, zoom);
    });
    this.map = map;
}

GenerateMap.prototype.createBusinessesPoints = function() {
    var self = this;
    $.ajax({
        dataType: "json",
        // context: this,
        url: "/profiles.json",
        success: function(data) {
            self.bizJson = data.businesses;
            self.createBusinessesLayer();
        }
    });

}

GenerateMap.prototype.createSurfPoints = function() {
    var self = this;
    $.ajax({
        dataType: "json",
        // context: this,
        url: "/surfspots.json",
        success: function(data) {
            self.surfJson = data.spots
            self.createSpotsLayer();
            self.showChecks();
            self.hideChecks();
        }
    });
}

GenerateMap.prototype.createSpotsLayer = function() {
    var self = this;
    self.spotsLayer.on('layeradd', function(e) {
        var marker = e.layer,
            feature = marker.feature;
        var imageUrl = feature.properties.image;;
        if (feature.info.spotupdates[0] !== undefined) {
            imageUrl = feature.info.spotupdates[0][1][0];
        }
        var popupContent = '<a class="popup" href="' + feature.properties.url + '">' +
            '<img src="' + imageUrl + '" />' + '<br/>' +
            feature.properties.title +
            '</a>';
        marker.bindPopup(popupContent, {
            closeButton: false,
            minWidth: 200
        });
    });
    self.spotsLayer.setGeoJSON(self.surfJson);
}

GenerateMap.prototype.createBusinessesLayer = function() {
    var self = this;
    self.businessLayer.on('layeradd', function(e) {
        var marker = e.layer
        feature = marker.feature;
        var popupContent = '<a class="popup" href="' + feature.properties.url + '">' +
            '<img src="' + feature.properties.image + '" />' +
            feature.properties.title +
            '</a>';
        marker.bindPopup(popupContent, {
            closeButton: false,
            minWidth: 200
        });
    });

    self.businessLayer.setGeoJSON(self.bizJson);

}
GenerateMap.prototype.hideChecks = function() {
    $('#main-map').on('click', function() {
        $('#updates-list').fadeOut();
        $('#menu-ui').fadeIn();
    })
}
GenerateMap.prototype.showChecks = function() {
    var self = this;
    self.spotsLayer.on('click', function(e) {
        var marker = e.layer,
            feature = marker.feature;
        var spotHtml = "";
        var newUpdate = '<a href="/surfspots/' + feature.info.id + '/updates/new"><div class="btn btn-primary new-update">New Update for this spot</div></a>';
        spotHtml += newUpdate;

        feature.info.spotupdates.forEach(function(update) {
            var upPics = '<div class="update-pics"><div class="up-pic">'
            update[1].forEach(function(url) {
                upPics += '<img src="' + url + '"/>'
            })
            upPics += "</div></div>"
            var upDiv = '<a href="" class="modal-link" data-url-call="/surfspots/' + feature.info.id + '/updates/' + update[0].id + '.json" data-toggle="modal" data-target="#myModal"><div class="update-box well"><h4>' + update[2] + '</h4>' + upPics + '</div></a>'
            spotHtml += upDiv;
        })
        $('#updates-list').html(spotHtml);
        $('#updates-list').fadeIn();
        $('#menu-ui').fadeOut();
        self.fillModal();
    })
}
GenerateMap.prototype.fillModal = function() {
    var self = this;
    $('.modal-link').on('click', function() {
        var url = $(this).attr('data-url-call');
        $.ajax({
            dataType: "json",
            // context: this,
            url: url,
            success: function(data) {
                self.generateModalHeader(data);
                self.generateModalBody(data);
            }
        })

    })
}
GenerateMap.prototype.generateModalHeader = function(data) {
    $('.modal-title').text(data.modal_info.surfspot.name + ' on ' + data.modal_info.pictures_time);
    
    var conditions = "";
    conditions += '<div class="row"><div class="col-sm-6">Waves: ' + data.modal_info.update.wave_height + ' m</div>';
    conditions += '<div class="col-sm-6">Wind: ' + data.modal_info.update.wind + '</div></div>';
    conditions += '<div class="row"><div class="col-sm-6">Crowds: ' + data.modal_info.update.crowds + '</div>';
    var rating = "";
    if (data.modal_info.update.rating === '0') {
        rating += '<span class="glyphicon glyphicon-ban-circle"></span>';
    } else {
        for (var i = 0; i < data.modal_info.update.rating; i++) {
            rating += '<span class="glyphicon glyphicon-star"></span>';
        };
    }
    conditions += '<div class="col-sm-6">Rating: ' + rating + '</div></div>';
    conditions += '<div class="row"><div class="col-sm-12">Comment: ' + data.modal_info.update.comment + '</div></div>';
    $('.conditions').html(conditions);
    
    var contributor = '<h3> Surfing conditions update provided by ' + '<a href="' + data.modal_info.contributor.link + '">' + data.modal_info.contributor.name + '</a></h3>'
    contributor += '<p>' + data.modal_info.contributor.address + ', ' + data.modal_info.contributor.city + '</p>'
    $('.contributor').html(contributor);

}

GenerateMap.prototype.generateModalBody = function(data) {
    var updatePics = "";
    data.modal_info.pictures.forEach(function(url) {
        updatePics += '<img src="' + url + '" class="public-avatar"/>'
    })
    $('.modal-pictures').html(updatePics);
    
    var chosenAd = ""
    chosenAd += '<p><img src="' + data.modal_info.special.specimg + '" class="public-special"/> </p>';
    chosenAd += '<h3>' + data.modal_info.special.special.title + '</h3>';
    chosenAd += '<p>' + data.modal_info.special.special.description + '</p>';
    chosenAd += '<p>' + data.modal_info.special.special.days_applicable + '</p>';
    $('.chosen-add').html(chosenAd);
}

GenerateMap.prototype.filterPoints = function() {
    var self = this;
    $('#filter-all').on('click', function() {
        $('#filter-spots').removeClass('active');
        $('#filter-businesses').removeClass('active');
        this.className = 'active';
        self.businessLayer.setGeoJSON(self.bizJson);
        self.spotsLayer.setGeoJSON(self.surfJson);
    });
    $('#filter-spots').on('click', function() {
        $('#filter-all').removeClass('active');
        $('#filter-businesses').removeClass('active');
        this.className = 'active';
        self.spotsLayer.setGeoJSON(self.surfJson);
        self.businessLayer.setGeoJSON("");
    });
    $('#filter-businesses').on('click', function() {
        $('#filter-spots').removeClass('active');
        $('#filter-all').removeClass('active');
        this.className = 'active';
        self.businessLayer.setGeoJSON(self.bizJson);
        self.spotsLayer.setGeoJSON("");
    });
}

GenerateMap.prototype.createClickPoint = function() {
    var self = this;
    this.map.on('click', function(e) {
        var geojson = self.pointSetup(e.latlng.lng,
            e.latlng.lat,
            'marker',
            $('#user_business_name').val(),
            $('#user_address').val(),
            '#ff8888');
        self.map.featureLayer.setGeoJSON(geojson);
        self.map.setView(e.latlng);
        $('#user_latitude').val(e.latlng.lat);
        $('#user_longitude').val(e.latlng.lng);
        $('#surfspot_latitude').val(e.latlng.lat);
        $('#surfspot_longitude').val(e.latlng.lng);

    })
}

GenerateMap.prototype.searchPoint = function() {
    var self = this;
    self.geoControl.on('select', function(e) {
        var geojson = self.pointSetup(e.feature.geometry.coordinates[0], e.feature.geometry.coordinates[1], 'restaurant')
        self.map.featureLayer.setGeoJSON(geojson);
        $('#user_latitude').val(e.feature.geometry.coordinates[1]);
        $('#user_longitude').val(e.feature.geometry.coordinates[0]);
    })
}

GenerateMap.prototype.pointSetup = function(lng, lat, type, title, description, color, image, url) {
    var geojson = ({
        "type": "Feature",
        "geometry": {
            "type": "Point",
            "coordinates": [lng, lat]
        },
        "properties": {
            "title": title,
            "description": description,
            "image": image,
            "url": url,
            "marker-color": color,
            "marker-size": "large",
            "marker-symbol": type
        }
    })
    return geojson;
}